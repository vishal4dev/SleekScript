#configuring initial setup

->To create a new project using Vite (a build tool for modern web development), you can use the following command:  "npm create vite@latest" lets me choose between different frontend templates->react,vue,vanilla

->moved to project folder and installed dependecies : npm i

->installed tailwind css 
->removed unwanted files, removed *app.css

!!!Stuck 1 -> snippets for react would not work , wasted 5-10 mins to no solution. just 5 secs forward the tutor solved the problem
         sol - ES7 extension
               auto rename tag(already present)
               tailwind css intellisence

->Added the initial config to github
-------------------------------------------------------------

->created pages and routes for the project 
       installed react-router-dom
       created routes for all pages    

->created header componets using - flowbite react(wrote a hell lot of styling contexts) 
                                   and react-icons            


-------------------------------------------------------------
//create and run the server

->need to create the backend inside the root directory- why? bcuz when we deploy the app that server is going to read file in the root directory and understand our code

->in the root directory "npm init -y" creates a package.json
->create a folder in the root dir (call it api) and create a file index.js
->to create a simple express server we can use ""const require = require('express')"" but if you want to do the import express from 'express; type then you need to change the type in package.json file to type:module

->added scripts for dev(dev) and user(start) mode
  dev: "nodemon index.js" in the package.json file

to run : npm run dev   
---------------------------------------------------------------
//connect to the database

->use mongodb , made a clustor and connected it to the project 
->databse pass = hotblogs
->to hide the pass from the string of the databse generated we created environment varible
which takes a key and replaces it with a value like the string here, else we'll be uploadiing the password on github


-------------------------------------------------------
//creating user model
creating schemas(rules):
In the context of your code snippet, it seems that you are creating schemas or rules for your database. These schemas define the structure and constraints for the data that will be stored in the database. 

For example, a schema might define a "User" table with columns like "id", "name", and "email". It can also specify constraints such as primary keys, foreign keys, and unique constraints. These schemas help ensure data integrity and consistency within the database.

By creating schemas, you are essentially defining the blueprint for how your data will be organized and stored in the database. This allows you to enforce data validation and maintain data consistency throughout your application.





